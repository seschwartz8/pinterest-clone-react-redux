{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PinCard.js\";\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { hoverPhoto, leavePhoto, pinPhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\nconst UnPinButtonContainer = styled.div`\n  position: absolute;\n  top: 10%;\n  left: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst PinCard = ({\n  photo,\n  ...props\n}) => {\n  // Establish access to img in DOM (set initial value so it's not null to start)\n  const refContainer = useRef('100');\n\n  const renderUnPinButton = () => {\n    // Allow pinning a photo\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => props.pinPhoto(photo),\n      className: \"ui button red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, \"Remove Pin\");\n  };\n\n  const onHover = () => {\n    // Change isHoverPhoto state to photoId\n    props.hoverPhoto(photo.id);\n  };\n\n  const onLeave = () => {\n    // Change isHoverPhoto state to null\n    props.leavePhoto();\n  };\n\n  return /*#__PURE__*/React.createElement(Link, {\n    onMouseEnter: () => onHover(photo.id),\n    onMouseLeave: () => onLeave(),\n    to: `/photos/${photo.id}`,\n    style: {\n      position: 'relative',\n      textAlign: 'center',\n      gridRowEnd: `span ${Math.ceil(refContainer.current.clientHeight / 10 + 1)}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    ref: refContainer,\n    src: photo.url,\n    alt: photo.title,\n    style: {\n      maxWidth: '250px',\n      borderRadius: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UnPinButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, props.isHoverPhoto === photo.id ? renderUnPinButton() : null));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isHoverPhoto: state.isHoverPhoto\n  };\n};\n\nexport default connect(mapStateToProps, {\n  hoverPhoto,\n  leavePhoto,\n  pinPhoto\n})(PinCard);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PinCard.js"],"names":["React","useRef","styled","connect","hoverPhoto","leavePhoto","pinPhoto","Link","UnPinButtonContainer","div","PinCard","photo","props","refContainer","renderUnPinButton","onHover","id","onLeave","position","textAlign","gridRowEnd","Math","ceil","current","clientHeight","url","title","maxWidth","borderRadius","isHoverPhoto","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,QAAjC,QAAiD,eAAjD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,oBAAoB,GAAGN,MAAM,CAACO,GAAI;;;;;;;CAAxC;;AASA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AACvC;AACA,QAAMC,YAAY,GAAGZ,MAAM,CAAC,KAAD,CAA3B;;AAEA,QAAMa,iBAAiB,GAAG,MAAM;AAC9B;AACA,wBACE;AAAQ,MAAA,OAAO,EAAE,MAAMF,KAAK,CAACN,QAAN,CAAeK,KAAf,CAAvB;AAA8C,MAAA,SAAS,EAAC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,GAPD;;AASA,QAAMI,OAAO,GAAG,MAAM;AACpB;AACAH,IAAAA,KAAK,CAACR,UAAN,CAAiBO,KAAK,CAACK,EAAvB;AACD,GAHD;;AAKA,QAAMC,OAAO,GAAG,MAAM;AACpB;AACAL,IAAAA,KAAK,CAACP,UAAN;AACD,GAHD;;AAKA,sBACE,oBAAC,IAAD;AACE,IAAA,YAAY,EAAE,MAAMU,OAAO,CAACJ,KAAK,CAACK,EAAP,CAD7B;AAEE,IAAA,YAAY,EAAE,MAAMC,OAAO,EAF7B;AAGE,IAAA,EAAE,EAAG,WAAUN,KAAK,CAACK,EAAG,EAH1B;AAIE,IAAA,KAAK,EAAE;AACLE,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,SAAS,EAAE,QAFN;AAGLC,MAAAA,UAAU,EAAG,QAAOC,IAAI,CAACC,IAAL,CAClBT,YAAY,CAACU,OAAb,CAAqBC,YAArB,GAAoC,EAApC,GAAyC,CADvB,CAElB;AALG,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYE;AACE,IAAA,GAAG,EAAEX,YADP;AAEE,IAAA,GAAG,EAAEF,KAAK,CAACc,GAFb;AAGE,IAAA,GAAG,EAAEd,KAAK,CAACe,KAHb;AAIE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,OADL;AAELC,MAAAA,YAAY,EAAE;AAFT,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAqBE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACiB,YAAN,KAAuBlB,KAAK,CAACK,EAA7B,GAAkCF,iBAAiB,EAAnD,GAAwD,IAD3D,CArBF,CADF;AA2BD,CAlDD;;AAoDA,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,YAAY,EAAEE,KAAK,CAACF;AADf,GAAP;AAGD,CAJD;;AAMA,eAAe1B,OAAO,CAAC2B,eAAD,EAAkB;AACtC1B,EAAAA,UADsC;AAEtCC,EAAAA,UAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZI,OAJY,CAAf","sourcesContent":["import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { hoverPhoto, leavePhoto, pinPhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nconst UnPinButtonContainer = styled.div`\n  position: absolute;\n  top: 10%;\n  left: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst PinCard = ({ photo, ...props }) => {\n  // Establish access to img in DOM (set initial value so it's not null to start)\n  const refContainer = useRef('100');\n\n  const renderUnPinButton = () => {\n    // Allow pinning a photo\n    return (\n      <button onClick={() => props.pinPhoto(photo)} className='ui button red'>\n        Remove Pin\n      </button>\n    );\n  };\n\n  const onHover = () => {\n    // Change isHoverPhoto state to photoId\n    props.hoverPhoto(photo.id);\n  };\n\n  const onLeave = () => {\n    // Change isHoverPhoto state to null\n    props.leavePhoto();\n  };\n\n  return (\n    <Link\n      onMouseEnter={() => onHover(photo.id)}\n      onMouseLeave={() => onLeave()}\n      to={`/photos/${photo.id}`}\n      style={{\n        position: 'relative',\n        textAlign: 'center',\n        gridRowEnd: `span ${Math.ceil(\n          refContainer.current.clientHeight / 10 + 1\n        )}`,\n      }}\n    >\n      <img\n        ref={refContainer}\n        src={photo.url}\n        alt={photo.title}\n        style={{\n          maxWidth: '250px',\n          borderRadius: '15px',\n        }}\n      />\n      <UnPinButtonContainer>\n        {props.isHoverPhoto === photo.id ? renderUnPinButton() : null}\n      </UnPinButtonContainer>\n    </Link>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isHoverPhoto: state.isHoverPhoto,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  hoverPhoto,\n  leavePhoto,\n  pinPhoto,\n})(PinCard);\n"]},"metadata":{},"sourceType":"module"}