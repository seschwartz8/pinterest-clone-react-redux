{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../actions';\nimport PhotoCard from './PhotoCard';\nimport styled from 'styled-components';\nconst PhotoTiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 10px;\n`;\n\nclass PhotoList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderPhotos = () => {\n      // Render all photos cards as HTML\n      return this.props.photos.map(photo => {\n        if (photo.tags.includes(this.props.searchInput)) {\n          return /*#__PURE__*/React.createElement(PhotoCard, {\n            key: photo.id,\n            photo: photo,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 16\n            }\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PhotoTiles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, this.renderPhotos()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    photos: Object.values(state.photos),\n    searchInput: state.search.searchInput\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos\n})(PhotoList);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js"],"names":["React","Component","connect","fetchPhotos","PhotoCard","styled","PhotoTiles","div","PhotoList","renderPhotos","props","photos","map","photo","tags","includes","searchInput","id","componentDidMount","render","mapStateToProps","state","Object","values","search"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,GAAI;;;;;CAA9B;;AAOA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAMhCQ,YANgC,GAMjB,MAAM;AACnB;AACA,aAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AACtC,YAAIA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoB,KAAKL,KAAL,CAAWM,WAA/B,CAAJ,EAAiD;AAC/C,8BAAO,oBAAC,SAAD;AAAW,YAAA,GAAG,EAAEH,KAAK,CAACI,EAAtB;AAA0B,YAAA,KAAK,EAAEJ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,OAJM,CAAP;AAKD,KAb+B;AAAA;;AAChCK,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKR,KAAL,CAAWP,WAAX;AACD;;AAWDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKV,YAAL,EAAb,CADF,CADF;AAKD;;AArB+B;;AAwBlC,MAAMW,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLV,IAAAA,MAAM,EAAEW,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACV,MAApB,CADH;AAELK,IAAAA,WAAW,EAAEK,KAAK,CAACG,MAAN,CAAaR;AAFrB,GAAP;AAID,CALD;;AAOA,eAAed,OAAO,CAACkB,eAAD,EAAkB;AACtCjB,EAAAA;AADsC,CAAlB,CAAP,CAEZK,SAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../actions';\nimport PhotoCard from './PhotoCard';\nimport styled from 'styled-components';\n\nconst PhotoTiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 10px;\n`;\n\nclass PhotoList extends Component {\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  renderPhotos = () => {\n    // Render all photos cards as HTML\n    return this.props.photos.map((photo) => {\n      if (photo.tags.includes(this.props.searchInput)) {\n        return <PhotoCard key={photo.id} photo={photo} />;\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className='content ui container'>\n        <PhotoTiles>{this.renderPhotos()}</PhotoTiles>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    photos: Object.values(state.photos),\n    searchInput: state.search.searchInput,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n})(PhotoList);\n"]},"metadata":{},"sourceType":"module"}