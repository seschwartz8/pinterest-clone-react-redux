{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoCard.js\";\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\nconst PhotoContainer = styled.div`\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 300px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1%;\n`;\nconst PinButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 80%;\n`;\nconst AdminControlsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n`;\n\nconst PhotoCard = ({\n  photo,\n  ...props\n}) => {\n  const refContainer = useRef('100');\n  console.log(refContainer.current.clientHeight); // const setSpansHeight = () => {\n  //   // Sets span value for CSS grid, based on each image card's height (gathered using refs)\n  //   const height = refContainer.current.clientHeight;\n  //   const rowHeight = 10;\n  //   const spans = Math.ceil(height / rowHeight + 1)\n  // };\n\n  const renderAdminControls = photo => {\n    // Allow creator of photo to edit or delete photo\n    if (photo.userId === props.currentUserId) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/photos/edit/${photo.id}`,\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n        to: `/photos/delete/${photo.id}`,\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    }\n  };\n\n  const renderPinButton = photo => {\n    // Allow pinning a photo\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    }, \"Pin \", photo.title);\n  };\n\n  const onHover = photoId => {\n    props.hoverPhoto(photoId);\n  };\n\n  const onLeave = () => {\n    props.leavePhoto();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PhotoContainer, {\n    onMouseEnter: () => onHover(photo.id),\n    onMouseLeave: () => onLeave(),\n    style: {\n      gridRowEnd: `span ${Math.ceil(refContainer.current.clientHeight / 11)}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    ref: refContainer,\n    src: photo.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PinButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, props.isHoverPhoto === photo.id ? renderPinButton(photo) : null), /*#__PURE__*/React.createElement(AdminControlsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, props.isHoverPhoto === photo.id && photo.userId === props.currentUserId ? renderAdminControls(photo) : null)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUserId: state.auth.userId,\n    isHoverPhoto: state.isHoverPhoto\n  };\n};\n\nexport default connect(mapStateToProps, {\n  hoverPhoto,\n  leavePhoto\n})(PhotoCard);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoCard.js"],"names":["React","useRef","styled","connect","hoverPhoto","leavePhoto","Link","PhotoContainer","div","PinButtonContainer","AdminControlsContainer","PhotoCard","photo","props","refContainer","console","log","current","clientHeight","renderAdminControls","userId","currentUserId","id","renderPinButton","title","onHover","photoId","onLeave","gridRowEnd","Math","ceil","url","isHoverPhoto","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nconst PhotoContainer = styled.div`\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 300px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1%;\n`;\n\nconst PinButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 80%;\n`;\n\nconst AdminControlsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n`;\n\nconst PhotoCard = ({ photo, ...props }) => {\n  const refContainer = useRef('100');\n  console.log(refContainer.current.clientHeight);\n\n  // const setSpansHeight = () => {\n  //   // Sets span value for CSS grid, based on each image card's height (gathered using refs)\n  //   const height = refContainer.current.clientHeight;\n  //   const rowHeight = 10;\n  //   const spans = Math.ceil(height / rowHeight + 1)\n  // };\n\n  const renderAdminControls = (photo) => {\n    // Allow creator of photo to edit or delete photo\n    if (photo.userId === props.currentUserId) {\n      return (\n        <React.Fragment>\n          <Link to={`/photos/edit/${photo.id}`} className='ui button primary'>\n            Edit\n          </Link>\n          <Link\n            to={`/photos/delete/${photo.id}`}\n            className='ui button negative'\n          >\n            Delete\n          </Link>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const renderPinButton = (photo) => {\n    // Allow pinning a photo\n    return <button className='ui button grey'>Pin {photo.title}</button>;\n  };\n\n  const onHover = (photoId) => {\n    props.hoverPhoto(photoId);\n  };\n\n  const onLeave = () => {\n    props.leavePhoto();\n  };\n\n  return (\n    <div>\n      <PhotoContainer\n        onMouseEnter={() => onHover(photo.id)}\n        onMouseLeave={() => onLeave()}\n        style={{\n          gridRowEnd: `span ${Math.ceil(\n            refContainer.current.clientHeight / 11\n          )}`,\n        }}\n      >\n        <img ref={refContainer} src={photo.url} />\n        <PinButtonContainer>\n          {props.isHoverPhoto === photo.id ? renderPinButton(photo) : null}\n        </PinButtonContainer>\n        <AdminControlsContainer>\n          {props.isHoverPhoto === photo.id &&\n          photo.userId === props.currentUserId\n            ? renderAdminControls(photo)\n            : null}\n        </AdminControlsContainer>\n      </PhotoContainer>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUserId: state.auth.userId,\n    isHoverPhoto: state.isHoverPhoto,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  hoverPhoto,\n  leavePhoto,\n})(PhotoCard);\n"]},"metadata":{},"sourceType":"module"}