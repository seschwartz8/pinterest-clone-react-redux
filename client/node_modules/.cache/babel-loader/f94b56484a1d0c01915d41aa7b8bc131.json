{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport PhotoCard from './PhotoCard';\nimport styled from 'styled-components';\nconst PhotoTiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 10px;\n`;\n\nclass PhotoList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderPhotos = () => {\n      // Render all photos cards as HTML\n      return this.props.photos.map(photo => {\n        return /*#__PURE__*/React.createElement(PhotoCard, {\n          key: photo.id,\n          photo: photo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, this.renderCreateButton(), /*#__PURE__*/React.createElement(PhotoTiles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, this.renderPhotos()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    photos: Object.values(state.photos),\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos\n})(PhotoList);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js"],"names":["React","Component","connect","fetchPhotos","Link","PhotoCard","styled","PhotoTiles","div","PhotoList","renderPhotos","props","photos","map","photo","id","componentDidMount","render","renderCreateButton","mapStateToProps","state","Object","values","isSignedIn","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,GAAI;;;;;CAA9B;;AAOA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAMhCS,YANgC,GAMjB,MAAM;AACnB;AACA,aAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AACtC,4BAAO,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAtB;AAA0B,UAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAX+B;AAAA;;AAChCE,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKL,KAAL,CAAWR,WAAX;AACD;;AASDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,kBAAL,EADH,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKR,YAAL,EAAb,CAFF,CADF;AAMD;;AApB+B;;AAuBlC,MAAMS,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLR,IAAAA,MAAM,EAAES,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACR,MAApB,CADH;AAELW,IAAAA,UAAU,EAAEH,KAAK,CAACI,IAAN,CAAWD;AAFlB,GAAP;AAID,CALD;;AAOA,eAAerB,OAAO,CAACiB,eAAD,EAAkB;AACtChB,EAAAA;AADsC,CAAlB,CAAP,CAEZM,SAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport PhotoCard from './PhotoCard';\nimport styled from 'styled-components';\n\nconst PhotoTiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 10px;\n`;\n\nclass PhotoList extends Component {\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  renderPhotos = () => {\n    // Render all photos cards as HTML\n    return this.props.photos.map((photo) => {\n      return <PhotoCard key={photo.id} photo={photo} />;\n    });\n  };\n\n  render() {\n    return (\n      <div className='content ui container'>\n        {this.renderCreateButton()}\n        <PhotoTiles>{this.renderPhotos()}</PhotoTiles>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    photos: Object.values(state.photos),\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n})(PhotoList);\n"]},"metadata":{},"sourceType":"module"}