{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass PhotoList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderAdminControls = photo => {\n      // Allow creator of photo to edit or delete photo\n      // if (photo.userId === this.props.currentUserId) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/photos/edit/${photo.id}`,\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n        to: `/photos/delete/${photo.id}`,\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, \"Delete\")); // }\n    };\n\n    this.showAdminControls = () => {\n      console.log('hello');\n    };\n\n    this.renderPhotos = () => {\n      // Render all photos as HTML\n      return this.props.photos.map(photo => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          key: photo.id,\n          alt: photo.title,\n          src: photo.url,\n          onMouseOver: this.showAdminControls,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }\n        }), this.renderAdminControls());\n      });\n    };\n\n    this.renderCreateButton = () => {\n      // If user is logged in, allow them to post new photo\n      if (this.props.isSignedIn) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: \"/photos/new\",\n          className: \"ui primary button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }, \"Post Photo\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, this.renderCreateButton(), this.renderPhotos());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    photos: Object.values(state.photos),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos\n})(PhotoList);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js"],"names":["React","Component","connect","fetchPhotos","Link","PhotoList","renderAdminControls","photo","id","showAdminControls","console","log","renderPhotos","props","photos","map","title","url","renderCreateButton","isSignedIn","componentDidMount","render","mapStateToProps","state","Object","values","currentUserId","auth","userId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAMhCK,mBANgC,GAMTC,KAAD,IAAW;AAC/B;AACA;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,gBAAeA,KAAK,CAACC,EAAG,EAAnC;AAAsC,QAAA,SAAS,EAAC,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,kBAAiBD,KAAK,CAACC,EAAG,EAArC;AAAwC,QAAA,SAAS,EAAC,oBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF,CAH+B,CAa/B;AACD,KApB+B;;AAAA,SAsBhCC,iBAtBgC,GAsBZ,MAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAxB+B;;AAAA,SA0BhCC,YA1BgC,GA0BjB,MAAM;AACnB;AACA,aAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBR,KAAD,IAAW;AACtC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,UAAA,GAAG,EAAED,KAAK,CAACS,KAFb;AAGE,UAAA,GAAG,EAAET,KAAK,CAACU,GAHb;AAIE,UAAA,WAAW,EAAE,KAAKR,iBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAOG,KAAKH,mBAAL,EAPH,CADF;AAWD,OAZM,CAAP;AAaD,KAzC+B;;AAAA,SA2ChCY,kBA3CgC,GA2CX,MAAM;AACzB;AACA,UAAI,KAAKL,KAAL,CAAWM,UAAf,EAA2B;AACzB,4BACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,aAAT;AAAuB,UAAA,SAAS,EAAC,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAKD;AACF,KApD+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKP,KAAL,CAAWV,WAAX;AACD;;AAkDDkB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,kBAAL,EADH,EAEG,KAAKN,YAAL,EAFH,CADF;AAMD;;AA7D+B;;AAgElC,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,MAAM,EAAEU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,MAApB,CADH;AAELY,IAAAA,aAAa,EAAEH,KAAK,CAACI,IAAN,CAAWC,MAFrB;AAGLT,IAAAA,UAAU,EAAEI,KAAK,CAACI,IAAN,CAAWR;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAejB,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,SAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass PhotoList extends Component {\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  renderAdminControls = (photo) => {\n    // Allow creator of photo to edit or delete photo\n    // if (photo.userId === this.props.currentUserId) {\n    return (\n      <div>\n        <Link to={`/photos/edit/${photo.id}`} className='ui button primary'>\n          Edit\n        </Link>\n        <Link to={`/photos/delete/${photo.id}`} className='ui button negative'>\n          Delete\n        </Link>\n      </div>\n    );\n    // }\n  };\n\n  showAdminControls = () => {\n    console.log('hello');\n  };\n\n  renderPhotos = () => {\n    // Render all photos as HTML\n    return this.props.photos.map((photo) => {\n      return (\n        <div>\n          <img\n            key={photo.id}\n            alt={photo.title}\n            src={photo.url}\n            onMouseOver={this.showAdminControls}\n          />\n          {this.renderAdminControls()}\n        </div>\n      );\n    });\n  };\n\n  renderCreateButton = () => {\n    // If user is logged in, allow them to post new photo\n    if (this.props.isSignedIn) {\n      return (\n        <Link to='/photos/new' className='ui primary button'>\n          Post Photo\n        </Link>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className='content ui container'>\n        {this.renderCreateButton()}\n        {this.renderPhotos()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    photos: Object.values(state.photos),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchPhotos })(PhotoList);\n"]},"metadata":{},"sourceType":"module"}