{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass PhotoList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderAdminControls = photo => {\n      // Allow creator of photo to edit or delete photo\n      if (photo.userId === this.props.currentUserId) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/photos/edit/${photo.id}`,\n          className: \"ui button primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n          to: `/photos/delete/${photo.id}`,\n          className: \"ui button negative\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }\n        }, \"Delete\"));\n      }\n    };\n\n    this.onHover = () => {\n      this.props.hoverPhoto();\n    };\n\n    this.onLeave = () => {\n      this.props.leavePhoto();\n    };\n\n    this.renderPhotos = () => {\n      // Render all photos as HTML\n      return this.props.photos.map(photo => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          key: photo.id,\n          alt: photo.title,\n          src: photo.url,\n          onMouseOver: this.onHover // onMouseLeave={this.onLeave}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        }), this.props.isHoverPhoto ? this.renderAdminControls(photo) : null);\n      });\n    };\n\n    this.renderCreateButton = () => {\n      // If user is logged in, allow them to post new photo\n      if (this.props.isSignedIn) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: \"/photos/new\",\n          className: \"ui primary button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }\n        }, \"Post Photo\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, this.props.isHoverPhoto ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 36\n      }\n    }, \"true\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 50\n      }\n    }, \"false\"), this.renderCreateButton(), this.renderPhotos());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    photos: Object.values(state.photos),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n    isHoverPhoto: state.isHoverPhoto\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n  hoverPhoto,\n  leavePhoto\n})(PhotoList);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js"],"names":["React","Component","connect","fetchPhotos","hoverPhoto","leavePhoto","Link","PhotoList","renderAdminControls","photo","userId","props","currentUserId","id","onHover","onLeave","renderPhotos","photos","map","title","url","isHoverPhoto","renderCreateButton","isSignedIn","componentDidMount","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass PhotoList extends Component {\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  renderAdminControls = (photo) => {\n    // Allow creator of photo to edit or delete photo\n    if (photo.userId === this.props.currentUserId) {\n      return (\n        <div>\n          <Link to={`/photos/edit/${photo.id}`} className='ui button primary'>\n            Edit\n          </Link>\n          <Link\n            to={`/photos/delete/${photo.id}`}\n            className='ui button negative'\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n  };\n\n  onHover = () => {\n    this.props.hoverPhoto();\n  };\n\n  onLeave = () => {\n    this.props.leavePhoto();\n  };\n\n  renderPhotos = () => {\n    // Render all photos as HTML\n    return this.props.photos.map((photo) => {\n      return (\n        <div>\n          <img\n            key={photo.id}\n            alt={photo.title}\n            src={photo.url}\n            onMouseOver={this.onHover}\n            // onMouseLeave={this.onLeave}\n          />\n          {this.props.isHoverPhoto ? this.renderAdminControls(photo) : null}\n        </div>\n      );\n    });\n  };\n\n  renderCreateButton = () => {\n    // If user is logged in, allow them to post new photo\n    if (this.props.isSignedIn) {\n      return (\n        <Link to='/photos/new' className='ui primary button'>\n          Post Photo\n        </Link>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className='content ui container'>\n        {this.props.isHoverPhoto ? <p>true</p> : <p>false</p>}\n\n        {this.renderCreateButton()}\n        {this.renderPhotos()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    photos: Object.values(state.photos),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n    isHoverPhoto: state.isHoverPhoto,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n  hoverPhoto,\n  leavePhoto,\n})(PhotoList);\n"]},"metadata":{},"sourceType":"module"}