{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/pins/PinBoard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPins } from '../../actions';\nimport PinCard from './PinCard';\nimport styled from 'styled-components';\nconst PhotoTiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 10px;\n`;\n\nclass PinBoard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderPhotos = () => {\n      // Render all photos cards as HTML\n      if (!this.props.pins) {\n        return 'Loading...';\n      }\n\n      return this.props.pins.map(pin => {\n        return /*#__PURE__*/React.createElement(PinCard, {\n          key: pin.id,\n          pin: pin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Fetch photos on component mount\n    console.log('userId in component' + this.props.currentUserId);\n    this.props.fetchPins(this.props.currentUserId);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PhotoTiles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, this.renderPhotos()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pins: Object.values(state.pins),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPins\n})(PinBoard);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/pins/PinBoard.js"],"names":["React","Component","connect","fetchPins","PinCard","styled","PhotoTiles","div","PinBoard","renderPhotos","props","pins","map","pin","id","componentDidMount","console","log","currentUserId","render","mapStateToProps","state","Object","values","auth","userId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,GAAI;;;;;CAA9B;;AAOA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAO/BQ,YAP+B,GAOhB,MAAM;AACnB;AACA,UAAI,CAAC,KAAKC,KAAL,CAAWC,IAAhB,EAAsB;AACpB,eAAO,YAAP;AACD;;AACD,aAAO,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAqBC,GAAD,IAAS;AAClC,4BAAO,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,GAAG,CAACC,EAAlB;AAAsB,UAAA,GAAG,EAAED,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAf8B;AAAA;;AAC/BE,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwB,KAAKP,KAAL,CAAWQ,aAA/C;AACA,SAAKR,KAAL,CAAWP,SAAX,CAAqB,KAAKO,KAAL,CAAWQ,aAAhC;AACD;;AAYDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKV,YAAL,EAAb,CADF,CADF;AAKD;;AAvB8B;;AA0BjC,MAAMW,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLV,IAAAA,IAAI,EAAEW,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACV,IAApB,CADD;AAELO,IAAAA,aAAa,EAAEG,KAAK,CAACG,IAAN,CAAWC;AAFrB,GAAP;AAID,CALD;;AAOA,eAAevB,OAAO,CAACkB,eAAD,EAAkB;AACtCjB,EAAAA;AADsC,CAAlB,CAAP,CAEZK,QAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPins } from '../../actions';\nimport PinCard from './PinCard';\nimport styled from 'styled-components';\n\nconst PhotoTiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 10px;\n`;\n\nclass PinBoard extends Component {\n  componentDidMount() {\n    // Fetch photos on component mount\n    console.log('userId in component' + this.props.currentUserId);\n    this.props.fetchPins(this.props.currentUserId);\n  }\n\n  renderPhotos = () => {\n    // Render all photos cards as HTML\n    if (!this.props.pins) {\n      return 'Loading...';\n    }\n    return this.props.pins.map((pin) => {\n      return <PinCard key={pin.id} pin={pin} />;\n    });\n  };\n\n  render() {\n    return (\n      <div className='content ui container'>\n        <PhotoTiles>{this.renderPhotos()}</PhotoTiles>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pins: Object.values(state.pins),\n    currentUserId: state.auth.userId,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPins,\n})(PinBoard);\n"]},"metadata":{},"sourceType":"module"}