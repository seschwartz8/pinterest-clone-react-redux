{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoCard.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\nconst PhotoContainer = styled.div`\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 300px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1%;\n`;\nconst PinButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 80%;\n`;\nconst AdminControlsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n`;\n\nconst PhotoCard = ({\n  photo\n}) => {\n  const renderAdminControls = photo => {\n    // Allow creator of photo to edit or delete photo\n    if (photo.userId === props.currentUserId) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/photos/edit/${photo.id}`,\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n        to: `/photos/delete/${photo.id}`,\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    }\n  };\n\n  renderPinButton = photo => {\n    // Allow pinning a photo\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }, \"Pin \", photo.title);\n  };\n\n  const onHover = photoId => {\n    props.hoverPhoto(photoId);\n  };\n\n  const onLeave = () => {\n    props.leavePhoto();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PhotoContainer, {\n    style: {\n      backgroundImage: `url(${photo.url})`\n    },\n    key: photo.id,\n    onMouseEnter: () => onHover(photo.id),\n    onMouseLeave: () => onLeave(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PinButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, props.isHoverPhoto === photo.id ? renderPinButton(photo) : null), /*#__PURE__*/React.createElement(AdminControlsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, props.isHoverPhoto === photo.id && photo.userId === props.currentUserId ? renderAdminControls(photo) : null)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    photos: Object.values(state.photos),\n    currentUserId: state.auth.userId,\n    isHoverPhoto: state.isHoverPhoto\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n  hoverPhoto,\n  leavePhoto\n})(PhotoList);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoCard.js"],"names":["React","Component","styled","connect","fetchPhotos","hoverPhoto","leavePhoto","Link","PhotoContainer","div","PinButtonContainer","AdminControlsContainer","PhotoCard","photo","renderAdminControls","userId","props","currentUserId","id","renderPinButton","title","onHover","photoId","onLeave","backgroundImage","url","isHoverPhoto","mapStateToProps","state","photos","Object","values","auth","PhotoList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nconst PhotoContainer = styled.div`\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 300px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1%;\n`;\n\nconst PinButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 80%;\n`;\n\nconst AdminControlsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n`;\n\nconst PhotoCard = ({ photo }) => {\n  const renderAdminControls = (photo) => {\n    // Allow creator of photo to edit or delete photo\n    if (photo.userId === props.currentUserId) {\n      return (\n        <React.Fragment>\n          <Link to={`/photos/edit/${photo.id}`} className='ui button primary'>\n            Edit\n          </Link>\n          <Link\n            to={`/photos/delete/${photo.id}`}\n            className='ui button negative'\n          >\n            Delete\n          </Link>\n        </React.Fragment>\n      );\n    }\n  };\n\n  renderPinButton = (photo) => {\n    // Allow pinning a photo\n    return <button className='ui button grey'>Pin {photo.title}</button>;\n  };\n\n  const onHover = (photoId) => {\n    props.hoverPhoto(photoId);\n  };\n\n  const onLeave = () => {\n    props.leavePhoto();\n  };\n\n  return (\n    <div>\n      <PhotoContainer\n        style={{ backgroundImage: `url(${photo.url})` }}\n        key={photo.id}\n        onMouseEnter={() => onHover(photo.id)}\n        onMouseLeave={() => onLeave()}\n      >\n        <PinButtonContainer>\n          {props.isHoverPhoto === photo.id ? renderPinButton(photo) : null}\n        </PinButtonContainer>\n        <AdminControlsContainer>\n          {props.isHoverPhoto === photo.id &&\n          photo.userId === props.currentUserId\n            ? renderAdminControls(photo)\n            : null}\n        </AdminControlsContainer>\n      </PhotoContainer>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    photos: Object.values(state.photos),\n    currentUserId: state.auth.userId,\n    isHoverPhoto: state.isHoverPhoto,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n  hoverPhoto,\n  leavePhoto,\n})(PhotoList);\n"]},"metadata":{},"sourceType":"module"}