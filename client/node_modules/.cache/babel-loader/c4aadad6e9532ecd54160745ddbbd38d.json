{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/pins/PinBoard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPins } from '../../actions';\nimport PinCard from './PinCard';\nimport styled from 'styled-components';\nconst PhotoTiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 10px;\n`;\n\nclass PinBoard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderPhotos = () => {\n      // Render all photos cards as HTML\n      return this.props.pins.map(photo => {\n        return /*#__PURE__*/React.createElement(PinCard, {\n          key: photo.id,\n          photo: photo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPins();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PhotoTiles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, this.renderPhotos()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pins: state.pins\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPins\n})(PinBoard);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/pins/PinBoard.js"],"names":["React","Component","connect","fetchPins","PinCard","styled","PhotoTiles","div","PinBoard","renderPhotos","props","pins","map","photo","id","componentDidMount","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,GAAI;;;;;CAA9B;;AAOA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAM/BQ,YAN+B,GAMhB,MAAM;AACnB;AACA,aAAO,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAqBC,KAAD,IAAW;AACpC,4BAAO,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,KAAK,CAACC,EAApB;AAAwB,UAAA,KAAK,EAAED,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAX8B;AAAA;;AAC/BE,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKL,KAAL,CAAWP,SAAX;AACD;;AASDa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKP,YAAL,EAAb,CADF,CADF;AAKD;;AAnB8B;;AAsBjC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLP,IAAAA,IAAI,EAAEO,KAAK,CAACP;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeT,OAAO,CAACe,eAAD,EAAkB;AACtCd,EAAAA;AADsC,CAAlB,CAAP,CAEZK,QAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPins } from '../../actions';\nimport PinCard from './PinCard';\nimport styled from 'styled-components';\n\nconst PhotoTiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 10px;\n`;\n\nclass PinBoard extends Component {\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPins();\n  }\n\n  renderPhotos = () => {\n    // Render all photos cards as HTML\n    return this.props.pins.map((photo) => {\n      return <PinCard key={photo.id} photo={photo} />;\n    });\n  };\n\n  render() {\n    return (\n      <div className='content ui container'>\n        <PhotoTiles>{this.renderPhotos()}</PhotoTiles>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pins: state.pins,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPins,\n})(PinBoard);\n"]},"metadata":{},"sourceType":"module"}