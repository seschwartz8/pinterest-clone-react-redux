{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto, deletePhoto } from '../../actions';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { Link } from 'react-router-dom';\n\nclass PhotoDelete extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderMessage = () => {\n      if (!this.props.photo) {\n        return 'Are you sure you want to delete this photo?';\n      }\n\n      return `Are you sure you want to delete photo with title ${this.props.photo.title}`;\n    };\n\n    this.renderButtons = () => {\n      const {\n        id\n      } = this.props.match.params;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.deletePhoto(id),\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"Delete\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        className: \"ui button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, \"Cancel\"));\n    };\n  }\n\n  componentDidMount() {\n    // Use the props that router automatically passes to rendered components (it contains the params from the routes, such as :id)\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchPhoto(id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      title: \"Delete Photo\",\n      content: this.renderMessage(),\n      actions: this.renderButtons(),\n      onDismiss: () => history.push('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // Router automatically passes these props to its rendered components\n  const {\n    id\n  } = ownProps.match.params;\n  return {\n    photo: state.photos[id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhoto,\n  deletePhoto\n})(PhotoDelete);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoDetails.js"],"names":["React","Component","connect","fetchPhoto","deletePhoto","Modal","history","Link","PhotoDelete","renderMessage","props","photo","title","renderButtons","id","match","params","componentDidMount","render","push","mapStateToProps","state","ownProps","photos"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAOlCQ,aAPkC,GAOlB,MAAM;AACpB,UAAI,CAAC,KAAKC,KAAL,CAAWC,KAAhB,EAAuB;AACrB,eAAO,6CAAP;AACD;;AACD,aAAQ,oDAAmD,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,KAAM,EAAlF;AACD,KAZiC;;AAAA,SAclCC,aAdkC,GAclB,MAAM;AACpB,YAAM;AAAEC,QAAAA;AAAF,UAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAhC;AAEA,0BACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWN,WAAX,CAAuBU,EAAvB,CADjB;AAEE,QAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CADF;AAaD,KA9BiC;AAAA;;AAClCG,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAhC;AACA,SAAKN,KAAL,CAAWP,UAAX,CAAsBW,EAAtB;AACD;;AA2BDI,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,OAAO,EAAE,KAAKT,aAAL,EAFX;AAGE,MAAA,OAAO,EAAE,KAAKI,aAAL,EAHX;AAIE,MAAA,SAAS,EAAE,MAAMP,OAAO,CAACa,IAAR,CAAa,GAAb,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAzCiC;;AA4CpC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C;AACA,QAAM;AAAER,IAAAA;AAAF,MAASQ,QAAQ,CAACP,KAAT,CAAeC,MAA9B;AACA,SAAO;AACLL,IAAAA,KAAK,EAAEU,KAAK,CAACE,MAAN,CAAaT,EAAb;AADF,GAAP;AAGD,CAND;;AAQA,eAAeZ,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CACbI,WADa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto, deletePhoto } from '../../actions';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { Link } from 'react-router-dom';\n\nclass PhotoDelete extends Component {\n  componentDidMount() {\n    // Use the props that router automatically passes to rendered components (it contains the params from the routes, such as :id)\n    const { id } = this.props.match.params;\n    this.props.fetchPhoto(id);\n  }\n\n  renderMessage = () => {\n    if (!this.props.photo) {\n      return 'Are you sure you want to delete this photo?';\n    }\n    return `Are you sure you want to delete photo with title ${this.props.photo.title}`;\n  };\n\n  renderButtons = () => {\n    const { id } = this.props.match.params;\n\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => this.props.deletePhoto(id)}\n          className='ui button negative'\n        >\n          Delete\n        </button>\n        <Link to='/' className='ui button'>\n          Cancel\n        </Link>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return (\n      <Modal\n        title='Delete Photo'\n        content={this.renderMessage()}\n        actions={this.renderButtons()}\n        onDismiss={() => history.push('/')}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // Router automatically passes these props to its rendered components\n  const { id } = ownProps.match.params;\n  return {\n    photo: state.photos[id],\n  };\n};\n\nexport default connect(mapStateToProps, { fetchPhoto, deletePhoto })(\n  PhotoDelete\n);\n"]},"metadata":{},"sourceType":"module"}