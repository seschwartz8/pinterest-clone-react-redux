{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoDelete.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto, deletePhoto } from '../../actions';\nimport Modal from '../Modal';\n\nclass PhotoDelete extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderMessage = () => {\n      if (!this.props.photo) {\n        return 'Are you sure you want to delete this photo?';\n      }\n\n      return `Are you sure you want to delete photo with title ${this.props.photo.title}`;\n    };\n  }\n\n  componentDidMount() {\n    // Use the props that router automatically passes to rendered components (it contains the params from the routes, such as :id)\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchPhoto(id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      title: \"Delete Photo\",\n      content: this.renderMessage(),\n      actions: this.renderButtons(),\n      onDismiss: () => history.push('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // Router automatically passes these props to its rendered components\n  const {\n    id\n  } = ownProps.match.params;\n  return {\n    photo: state.photos[id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhoto,\n  deletePhoto\n})(PhotoDelete);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoDelete.js"],"names":["React","Component","connect","fetchPhoto","deletePhoto","Modal","PhotoDelete","renderMessage","props","photo","title","componentDidMount","id","match","params","render","renderButtons","history","push","mapStateToProps","state","ownProps","photos"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAOlCM,aAPkC,GAOlB,MAAM;AACpB,UAAI,CAAC,KAAKC,KAAL,CAAWC,KAAhB,EAAuB;AACrB,eAAO,6CAAP;AACD;;AACD,aAAQ,oDAAmD,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,KAAM,EAAlF;AACD,KAZiC;AAAA;;AAClCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAhC;AACA,SAAKN,KAAL,CAAWL,UAAX,CAAsBS,EAAtB;AACD;;AASDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,OAAO,EAAE,KAAKR,aAAL,EAFX;AAGE,MAAA,OAAO,EAAE,KAAKS,aAAL,EAHX;AAIE,MAAA,SAAS,EAAE,MAAMC,OAAO,CAACC,IAAR,CAAa,GAAb,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AAzBiC;;AA4BpC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C;AACA,QAAM;AAAET,IAAAA;AAAF,MAASS,QAAQ,CAACR,KAAT,CAAeC,MAA9B;AACA,SAAO;AACLL,IAAAA,KAAK,EAAEW,KAAK,CAACE,MAAN,CAAaV,EAAb;AADF,GAAP;AAGD,CAND;;AAQA,eAAeV,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CACbE,WADa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto, deletePhoto } from '../../actions';\nimport Modal from '../Modal';\n\nclass PhotoDelete extends Component {\n  componentDidMount() {\n    // Use the props that router automatically passes to rendered components (it contains the params from the routes, such as :id)\n    const { id } = this.props.match.params;\n    this.props.fetchPhoto(id);\n  }\n\n  renderMessage = () => {\n    if (!this.props.photo) {\n      return 'Are you sure you want to delete this photo?';\n    }\n    return `Are you sure you want to delete photo with title ${this.props.photo.title}`;\n  };\n\n  render() {\n    return (\n      <div className='content ui container'>\n        <Modal\n          title='Delete Photo'\n          content={this.renderMessage()}\n          actions={this.renderButtons()}\n          onDismiss={() => history.push('/')}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // Router automatically passes these props to its rendered components\n  const { id } = ownProps.match.params;\n  return {\n    photo: state.photos[id],\n  };\n};\n\nexport default connect(mapStateToProps, { fetchPhoto, deletePhoto })(\n  PhotoDelete\n);\n"]},"metadata":{},"sourceType":"module"}