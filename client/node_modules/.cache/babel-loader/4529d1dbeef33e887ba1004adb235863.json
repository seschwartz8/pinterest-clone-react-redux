{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      // Called any time the user's authentication status changes to update state\n      if (isSignedIn) {\n        const userId = this.auth.currentUser.get().getId(); // Sign in action (as opposed to auth's build in sign in)\n\n        this.props.signIn(userId);\n      } else {\n        // Sign out action (as opposed to auth's build in sign out)\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      // Google auth's built in sign in fx\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      // Google auth's built in sign out fx\n      this.auth.signOut();\n    };\n\n    this.renderAuthButton = () => {\n      if (this.props.isSignedIn === null) {\n        // No information yet on sign in status\n        return null;\n      } else if (this.props.isSignedIn) {\n        // User is signed in\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"ui blue google button\",\n          onClick: this.onSignOutClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"google icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }\n        }), \"Sign Out\");\n      } else {\n        // User is signed out\n\n        /*#__PURE__*/\n        React.createElement(\"button\", {\n          className: \"ui green google button\",\n          onClick: this.onSignInClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"google icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }\n        }), \"Sign In with Google\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: `1003914086545-dkgl55o815ilth897itbhdtimgaenigr.apps.googleusercontent.com`,\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance(); // Update store based on whether user is signed in\n\n        this.onAuthChange(this.auth.isSignedIn.get()); // Listen for signed in status to change\n\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/GoogleAuth.js"],"names":["React","Component","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","userId","auth","currentUser","get","getId","props","onSignInClick","onSignOutClick","renderAuthButton","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAkBjCK,YAlBiC,GAkBjBC,UAAD,IAAgB;AAC7B;AACA,UAAIA,UAAJ,EAAgB;AACd,cAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAf,CADc,CAEd;;AACA,aAAKC,KAAL,CAAWV,MAAX,CAAkBK,MAAlB;AACD,OAJD,MAIO;AACL;AACA,aAAKK,KAAL,CAAWT,OAAX;AACD;AACF,KA5BgC;;AAAA,SA8BjCU,aA9BiC,GA8BjB,MAAM;AACpB;AACA,WAAKL,IAAL,CAAUN,MAAV;AACD,KAjCgC;;AAAA,SAmCjCY,cAnCiC,GAmChB,MAAM;AACrB;AACA,WAAKN,IAAL,CAAUL,OAAV;AACD,KAtCgC;;AAAA,SAwCjCY,gBAxCiC,GAwCd,MAAM;AACvB,UAAI,KAAKH,KAAL,CAAWN,UAAX,KAA0B,IAA9B,EAAoC;AAClC;AACA,eAAO,IAAP;AACD,OAHD,MAGO,IAAI,KAAKM,KAAL,CAAWN,UAAf,EAA2B;AAChC;AACA,4BACE;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,OAAO,EAAE,KAAKQ,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,aADF;AAMD,OARM,MAQA;AACL;;AACA;AAAA;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAA2C,UAAA,OAAO,EAAE,KAAKD,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAID;AACF,KA3DgC;AAAA;;AACjCG,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EAAG,2EADP;AAEJC,QAAAA,KAAK,EAAE;AAFH,OADR,EAKGC,IALH,CAKQ,MAAM;AACV,aAAKhB,IAAL,GAAYS,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CADU,CAEV;;AACA,aAAKrB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB,EAHU,CAIV;;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBqB,MAArB,CAA4B,KAAKtB,YAAjC;AACD,OAXH;AAYD,KAbD;AAcD;;AA6CDuB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKb,gBAAL,EAAN,CAAP;AACD;;AA/DgC;;AAkEnC,MAAMc,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLxB,IAAAA,UAAU,EAAEwB,KAAK,CAACtB,IAAN,CAAWF;AADlB,GAAP;AAGD,CAJD;;AAMA,eAAeL,OAAO,CAAC4B,eAAD,EAAkB;AAAE3B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends Component {\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client\n        .init({\n          clientId: `1003914086545-dkgl55o815ilth897itbhdtimgaenigr.apps.googleusercontent.com`,\n          scope: 'email',\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          // Update store based on whether user is signed in\n          this.onAuthChange(this.auth.isSignedIn.get());\n          // Listen for signed in status to change\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    // Called any time the user's authentication status changes to update state\n    if (isSignedIn) {\n      const userId = this.auth.currentUser.get().getId();\n      // Sign in action (as opposed to auth's build in sign in)\n      this.props.signIn(userId);\n    } else {\n      // Sign out action (as opposed to auth's build in sign out)\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    // Google auth's built in sign in fx\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    // Google auth's built in sign out fx\n    this.auth.signOut();\n  };\n\n  renderAuthButton = () => {\n    if (this.props.isSignedIn === null) {\n      // No information yet on sign in status\n      return null;\n    } else if (this.props.isSignedIn) {\n      // User is signed in\n      return (\n        <button className='ui blue google button' onClick={this.onSignOutClick}>\n          <i className='google icon' />\n          Sign Out\n        </button>\n      );\n    } else {\n      // User is signed out\n      <button className='ui green google button' onClick={this.onSignInClick}>\n        <i className='google icon' />\n        Sign In with Google\n      </button>;\n    }\n  };\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}