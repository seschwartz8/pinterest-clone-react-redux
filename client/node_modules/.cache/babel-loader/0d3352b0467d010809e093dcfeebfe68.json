{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass PhotoList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderPhotos = () => {\n      // Render all photos as HTML\n      return this.props.photos.map(photo => {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          key: photo.id,\n          alt: photo.title,\n          src: photo.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n\n    this.renderCreateButton = () => {\n      // If user is logged in, allow them to post new photo\n      if (this.props.isSignedIn) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: \"/photos/new\",\n          className: \"ui primary button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }\n        }, \"Post Photo\");\n      }\n    };\n\n    this.renderAdminControls = photo => {// Allow creator of photo to edit or delete photo\n    };\n  }\n\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, this.renderCreateButton(), this.renderPhotos());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    photos: Object.values(state.photos),\n    isSignedIn: state.auth.isSignedIn,\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos\n})(PhotoList);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js"],"names":["React","Component","connect","fetchPhotos","Link","PhotoList","renderPhotos","props","photos","map","photo","id","title","url","renderCreateButton","isSignedIn","renderAdminControls","componentDidMount","render","mapStateToProps","state","Object","values","auth","currentUserId","userId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAMhCK,YANgC,GAMjB,MAAM;AACnB;AACA,aAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AACtC,4BAAO;AAAK,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAoB,UAAA,GAAG,EAAED,KAAK,CAACE,KAA/B;AAAsC,UAAA,GAAG,EAAEF,KAAK,CAACG,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAX+B;;AAAA,SAahCC,kBAbgC,GAaX,MAAM;AACzB;AACA,UAAI,KAAKP,KAAL,CAAWQ,UAAf,EAA2B;AACzB,4BACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,aAAT;AAAuB,UAAA,SAAS,EAAC,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAKD;AACF,KAtB+B;;AAAA,SAwBhCC,mBAxBgC,GAwBTN,KAAD,IAAW,CAC/B;AACD,KA1B+B;AAAA;;AAChCO,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKV,KAAL,CAAWJ,WAAX;AACD;;AAwBDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,kBAAL,EADH,EAEG,KAAKR,YAAL,EAFH,CADF;AAMD;;AAnC+B;;AAsClC,MAAMa,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLZ,IAAAA,MAAM,EAAEa,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACZ,MAApB,CADH;AAELO,IAAAA,UAAU,EAAEK,KAAK,CAACG,IAAN,CAAWR,UAFlB;AAGLS,IAAAA,aAAa,EAAEJ,KAAK,CAACG,IAAN,CAAWE;AAHrB,GAAP;AAKD,CAND;;AAQA,eAAevB,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,SAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass PhotoList extends Component {\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  renderPhotos = () => {\n    // Render all photos as HTML\n    return this.props.photos.map((photo) => {\n      return <img key={photo.id} alt={photo.title} src={photo.url} />;\n    });\n  };\n\n  renderCreateButton = () => {\n    // If user is logged in, allow them to post new photo\n    if (this.props.isSignedIn) {\n      return (\n        <Link to='/photos/new' className='ui primary button'>\n          Post Photo\n        </Link>\n      );\n    }\n  };\n\n  renderAdminControls = (photo) => {\n    // Allow creator of photo to edit or delete photo\n  };\n\n  render() {\n    return (\n      <div className='content ui container'>\n        {this.renderCreateButton()}\n        {this.renderPhotos()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    photos: Object.values(state.photos),\n    isSignedIn: state.auth.isSignedIn,\n    currentUserId: state.auth.userId,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchPhotos })(PhotoList);\n"]},"metadata":{},"sourceType":"module"}