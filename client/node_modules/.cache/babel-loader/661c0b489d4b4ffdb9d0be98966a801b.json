{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport PhotoCard from './PhotoCard';\n\nclass PhotoList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderCreateButton = () => {\n      // If user is logged in, allow them to post new photo\n      if (this.props.isSignedIn) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: \"/photos/new\",\n          className: \"ui primary button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 9\n          }\n        }, \"Post Photo\");\n      }\n    };\n\n    this.renderPhotos = () => {\n      // Render all photos cards as HTML\n      return this.props.photos.map(photo => {\n        return /*#__PURE__*/React.createElement(PhotoCard, {\n          photo: photo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, this.renderCreateButton(), this.renderPhotos());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    photos: Object.values(state.photos),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n    isHoverPhoto: state.isHoverPhoto\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n  hoverPhoto,\n  leavePhoto\n})(PhotoList);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js"],"names":["React","Component","styled","connect","fetchPhotos","hoverPhoto","leavePhoto","Link","PhotoCard","PhotoList","renderCreateButton","props","isSignedIn","renderPhotos","photos","map","photo","componentDidMount","render","mapStateToProps","state","Object","values","currentUserId","auth","userId","isHoverPhoto"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,UAAlC,QAAoD,eAApD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAMhCS,kBANgC,GAMX,MAAM;AACzB;AACA,UAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzB,4BACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,aAAT;AAAuB,UAAA,SAAS,EAAC,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAKD;AACF,KAf+B;;AAAA,SAiBhCC,YAjBgC,GAiBjB,MAAM;AACnB;AACA,aAAO,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AACtC,4BAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAtB+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKN,KAAL,CAAWP,WAAX;AACD;;AAoBDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,kBAAL,EADH,EAEG,KAAKG,YAAL,EAFH,CADF;AAMD;;AA/B+B;;AAkClC,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLN,IAAAA,MAAM,EAAEO,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACN,MAApB,CADH;AAELS,IAAAA,aAAa,EAAEH,KAAK,CAACI,IAAN,CAAWC,MAFrB;AAGLb,IAAAA,UAAU,EAAEQ,KAAK,CAACI,IAAN,CAAWZ,UAHlB;AAILc,IAAAA,YAAY,EAAEN,KAAK,CAACM;AAJf,GAAP;AAMD,CAPD;;AASA,eAAevB,OAAO,CAACgB,eAAD,EAAkB;AACtCf,EAAAA,WADsC;AAEtCC,EAAAA,UAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZG,SAJY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport PhotoCard from './PhotoCard';\n\nclass PhotoList extends Component {\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  renderCreateButton = () => {\n    // If user is logged in, allow them to post new photo\n    if (this.props.isSignedIn) {\n      return (\n        <Link to='/photos/new' className='ui primary button'>\n          Post Photo\n        </Link>\n      );\n    }\n  };\n\n  renderPhotos = () => {\n    // Render all photos cards as HTML\n    return this.props.photos.map((photo) => {\n      return <PhotoCard photo={photo} />;\n    });\n  };\n\n  render() {\n    return (\n      <div className='content ui container'>\n        {this.renderCreateButton()}\n        {this.renderPhotos()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    photos: Object.values(state.photos),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n    isHoverPhoto: state.isHoverPhoto,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n  hoverPhoto,\n  leavePhoto,\n})(PhotoList);\n"]},"metadata":{},"sourceType":"module"}