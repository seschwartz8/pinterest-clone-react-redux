{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoCard.js\";\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\nconst PhotoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst PinButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 80%;\n`;\nconst AdminControlsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n`;\n\nconst PhotoCard = ({\n  photo,\n  ...props\n}) => {\n  const refContainer = useRef('100');\n\n  const renderAdminControls = photo => {\n    // Allow creator of photo to edit or delete photo\n    if (photo.userId === props.currentUserId) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/photos/edit/${photo.id}`,\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n        to: `/photos/delete/${photo.id}`,\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    }\n  };\n\n  const renderPinButton = photo => {\n    // Allow pinning a photo\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }, \"Pin \", photo.title);\n  };\n\n  const onHover = photoId => {\n    props.hoverPhoto(photoId);\n  };\n\n  const onLeave = () => {\n    props.leavePhoto();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PhotoContainer, {\n    onMouseEnter: () => onHover(photo.id),\n    onMouseLeave: () => onLeave(),\n    style: {\n      gridRowEnd: `span ${Math.ceil(refContainer.current.clientHeight / 11)}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    ref: refContainer,\n    src: photo.url,\n    alt: photo.title,\n    style: {\n      maxWidth: '250px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PinButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, props.isHoverPhoto === photo.id ? renderPinButton(photo) : null), /*#__PURE__*/React.createElement(AdminControlsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, props.isHoverPhoto === photo.id && photo.userId === props.currentUserId ? renderAdminControls(photo) : null)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUserId: state.auth.userId,\n    isHoverPhoto: state.isHoverPhoto\n  };\n};\n\nexport default connect(mapStateToProps, {\n  hoverPhoto,\n  leavePhoto\n})(PhotoCard);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoCard.js"],"names":["React","useRef","styled","connect","hoverPhoto","leavePhoto","Link","PhotoContainer","div","PinButtonContainer","AdminControlsContainer","PhotoCard","photo","props","refContainer","renderAdminControls","userId","currentUserId","id","renderPinButton","title","onHover","photoId","onLeave","gridRowEnd","Math","ceil","current","clientHeight","url","maxWidth","isHoverPhoto","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,eAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,cAAc,GAAGL,MAAM,CAACM,GAAI;;;;;CAAlC;AAOA,MAAMC,kBAAkB,GAAGP,MAAM,CAACM,GAAI;;;;CAAtC;AAMA,MAAME,sBAAsB,GAAGR,MAAM,CAACM,GAAI;;;;CAA1C;;AAMA,MAAMG,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AACzC,QAAMC,YAAY,GAAGb,MAAM,CAAC,KAAD,CAA3B;;AAEA,QAAMc,mBAAmB,GAAIH,KAAD,IAAW;AACrC;AACA,QAAIA,KAAK,CAACI,MAAN,KAAiBH,KAAK,CAACI,aAA3B,EAA0C;AACxC,0BACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,gBAAeL,KAAK,CAACM,EAAG,EAAnC;AAAsC,QAAA,SAAS,EAAC,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAG,kBAAiBN,KAAK,CAACM,EAAG,EADjC;AAEE,QAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF;AAaD;AACF,GAjBD;;AAmBA,QAAMC,eAAe,GAAIP,KAAD,IAAW;AACjC;AACA,wBAAO;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAwCA,KAAK,CAACQ,KAA9C,CAAP;AACD,GAHD;;AAKA,QAAMC,OAAO,GAAIC,OAAD,IAAa;AAC3BT,IAAAA,KAAK,CAACT,UAAN,CAAiBkB,OAAjB;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpBV,IAAAA,KAAK,CAACR,UAAN;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,YAAY,EAAE,MAAMgB,OAAO,CAACT,KAAK,CAACM,EAAP,CAD7B;AAEE,IAAA,YAAY,EAAE,MAAMK,OAAO,EAF7B;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAG,QAAOC,IAAI,CAACC,IAAL,CAClBZ,YAAY,CAACa,OAAb,CAAqBC,YAArB,GAAoC,EADlB,CAElB;AAHG,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AACE,IAAA,GAAG,EAAEd,YADP;AAEE,IAAA,GAAG,EAAEF,KAAK,CAACiB,GAFb;AAGE,IAAA,GAAG,EAAEjB,KAAK,CAACQ,KAHb;AAIE,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE;AAAZ,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAeE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KAAK,CAACkB,YAAN,KAAuBnB,KAAK,CAACM,EAA7B,GAAkCC,eAAe,CAACP,KAAD,CAAjD,GAA2D,IAD9D,CAfF,eAkBE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACkB,YAAN,KAAuBnB,KAAK,CAACM,EAA7B,IACDN,KAAK,CAACI,MAAN,KAAiBH,KAAK,CAACI,aADtB,GAEGF,mBAAmB,CAACH,KAAD,CAFtB,GAGG,IAJN,CAlBF,CADF,CADF;AA6BD,CAhED;;AAkEA,MAAMoB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLhB,IAAAA,aAAa,EAAEgB,KAAK,CAACC,IAAN,CAAWlB,MADrB;AAELe,IAAAA,YAAY,EAAEE,KAAK,CAACF;AAFf,GAAP;AAID,CALD;;AAOA,eAAe5B,OAAO,CAAC6B,eAAD,EAAkB;AACtC5B,EAAAA,UADsC;AAEtCC,EAAAA;AAFsC,CAAlB,CAAP,CAGZM,SAHY,CAAf","sourcesContent":["import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nconst PhotoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst PinButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 80%;\n`;\n\nconst AdminControlsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n`;\n\nconst PhotoCard = ({ photo, ...props }) => {\n  const refContainer = useRef('100');\n\n  const renderAdminControls = (photo) => {\n    // Allow creator of photo to edit or delete photo\n    if (photo.userId === props.currentUserId) {\n      return (\n        <React.Fragment>\n          <Link to={`/photos/edit/${photo.id}`} className='ui button primary'>\n            Edit\n          </Link>\n          <Link\n            to={`/photos/delete/${photo.id}`}\n            className='ui button negative'\n          >\n            Delete\n          </Link>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const renderPinButton = (photo) => {\n    // Allow pinning a photo\n    return <button className='ui button grey'>Pin {photo.title}</button>;\n  };\n\n  const onHover = (photoId) => {\n    props.hoverPhoto(photoId);\n  };\n\n  const onLeave = () => {\n    props.leavePhoto();\n  };\n\n  return (\n    <div>\n      <PhotoContainer\n        onMouseEnter={() => onHover(photo.id)}\n        onMouseLeave={() => onLeave()}\n        style={{\n          gridRowEnd: `span ${Math.ceil(\n            refContainer.current.clientHeight / 11\n          )}`,\n        }}\n      >\n        <img\n          ref={refContainer}\n          src={photo.url}\n          alt={photo.title}\n          style={{ maxWidth: '250px' }}\n        />\n        <PinButtonContainer>\n          {props.isHoverPhoto === photo.id ? renderPinButton(photo) : null}\n        </PinButtonContainer>\n        <AdminControlsContainer>\n          {props.isHoverPhoto === photo.id &&\n          photo.userId === props.currentUserId\n            ? renderAdminControls(photo)\n            : null}\n        </AdminControlsContainer>\n      </PhotoContainer>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUserId: state.auth.userId,\n    isHoverPhoto: state.isHoverPhoto,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  hoverPhoto,\n  leavePhoto,\n})(PhotoCard);\n"]},"metadata":{},"sourceType":"module"}