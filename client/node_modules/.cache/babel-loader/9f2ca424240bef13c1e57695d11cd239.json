{"ast":null,"code":"import * as type from './types';\nimport photos from '../apis/photos';\nimport history from '../history';\nexport const signIn = userId => {\n  return {\n    type: type.SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: type.SIGN_OUT\n  };\n};\nexport const createPhoto = formValues => {\n  return async (dispatch, getState) => {\n    // POST request with axios to create new photo with current userId\n    const {\n      userId\n    } = getState().auth;\n    const response = await photos.post('/photos', { ...formValues,\n      userId\n    });\n    dispatch({\n      type: type.CREATE_PHOTO,\n      payload: response.data\n    }); // Navigate the user back to list of photos (only after the API request is resolved)\n\n    history.push('/');\n  };\n};\nexport const fetchPhotos = () => {\n  return async dispatch => {\n    // GET request with axios to get all photos\n    const response = await photos.get('/photos');\n    dispatch({\n      type: type.FETCH_PHOTOS,\n      payload: response.data\n    });\n  };\n};\nexport const hoverPhoto = () => {\n  return {\n    type: type.HOVER_PHOTO,\n    payload: true\n  };\n};","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/actions/index.js"],"names":["type","photos","history","signIn","userId","SIGN_IN","payload","signOut","SIGN_OUT","createPhoto","formValues","dispatch","getState","auth","response","post","CREATE_PHOTO","data","push","fetchPhotos","get","FETCH_PHOTOS","hoverPhoto","HOVER_PHOTO"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,SAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLJ,IAAAA,IAAI,EAAEA,IAAI,CAACK,OADN;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLP,IAAAA,IAAI,EAAEA,IAAI,CAACQ;AADN,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAIC,UAAD,IAAgB;AACzC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC;AACA,UAAM;AAAER,MAAAA;AAAF,QAAaQ,QAAQ,GAAGC,IAA9B;AACA,UAAMC,QAAQ,GAAG,MAAMb,MAAM,CAACc,IAAP,CAAY,SAAZ,EAAuB,EAAE,GAAGL,UAAL;AAAiBN,MAAAA;AAAjB,KAAvB,CAAvB;AACAO,IAAAA,QAAQ,CAAC;AACPX,MAAAA,IAAI,EAAEA,IAAI,CAACgB,YADJ;AAEPV,MAAAA,OAAO,EAAEQ,QAAQ,CAACG;AAFX,KAAD,CAAR,CAJmC,CAQnC;;AACAf,IAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO,MAAOR,QAAP,IAAoB;AACzB;AACA,UAAMG,QAAQ,GAAG,MAAMb,MAAM,CAACmB,GAAP,CAAW,SAAX,CAAvB;AACAT,IAAAA,QAAQ,CAAC;AACPX,MAAAA,IAAI,EAAEA,IAAI,CAACqB,YADJ;AAEPf,MAAAA,OAAO,EAAEQ,QAAQ,CAACG;AAFX,KAAD,CAAR;AAID,GAPD;AAQD,CATM;AAWP,OAAO,MAAMK,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLtB,IAAAA,IAAI,EAAEA,IAAI,CAACuB,WADN;AAELjB,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as type from './types';\nimport photos from '../apis/photos';\nimport history from '../history';\n\nexport const signIn = (userId) => {\n  return {\n    type: type.SIGN_IN,\n    payload: userId,\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: type.SIGN_OUT,\n  };\n};\n\nexport const createPhoto = (formValues) => {\n  return async (dispatch, getState) => {\n    // POST request with axios to create new photo with current userId\n    const { userId } = getState().auth;\n    const response = await photos.post('/photos', { ...formValues, userId });\n    dispatch({\n      type: type.CREATE_PHOTO,\n      payload: response.data,\n    });\n    // Navigate the user back to list of photos (only after the API request is resolved)\n    history.push('/');\n  };\n};\n\nexport const fetchPhotos = () => {\n  return async (dispatch) => {\n    // GET request with axios to get all photos\n    const response = await photos.get('/photos');\n    dispatch({\n      type: type.FETCH_PHOTOS,\n      payload: response.data,\n    });\n  };\n};\n\nexport const hoverPhoto = () => {\n  return {\n    type: type.HOVER_PHOTO,\n    payload: true,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}