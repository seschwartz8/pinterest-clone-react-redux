{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport PhotoCard from './PhotoCard';\nimport styled from 'styled-components';\nconst PhotoTiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 10px;\n`;\n\nclass PhotoList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderCreateButton = () => {\n      // If user is logged in, allow them to post new photo\n      if (this.props.isSignedIn) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: \"/photos/new\",\n          className: \"ui primary button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }\n        }, \"Post Photo\");\n      }\n    };\n\n    this.renderPhotos = () => {\n      // Render all photos cards as HTML\n      return this.props.photos.map(photo => {\n        return /*#__PURE__*/React.createElement(PhotoCard, {\n          key: photo.id,\n          photo: photo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div className='content ui container'>\n      //   {this.renderCreateButton()}\n      React.createElement(PhotoTiles, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, this.renderPhotos()) // </div>\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    photos: Object.values(state.photos),\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos\n})(PhotoList);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js"],"names":["React","Component","connect","fetchPhotos","Link","PhotoCard","styled","PhotoTiles","div","PhotoList","renderCreateButton","props","isSignedIn","renderPhotos","photos","map","photo","id","componentDidMount","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,GAAI;;;;;CAA9B;;AAOA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAMhCS,kBANgC,GAMX,MAAM;AACzB;AACA,UAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzB,4BACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,aAAT;AAAuB,UAAA,SAAS,EAAC,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAKD;AACF,KAf+B;;AAAA,SAiBhCC,YAjBgC,GAiBjB,MAAM;AACnB;AACA,aAAO,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AACtC,4BAAO,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAtB;AAA0B,UAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAtB+B;AAAA;;AAChCE,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKP,KAAL,CAAWR,WAAX;AACD;;AAoBDgB,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AACA,0BAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa,KAAKN,YAAL,EAAb,CAHF,CAIE;;AAJF;AAMD;;AA/B+B;;AAkClC,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLP,IAAAA,MAAM,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,MAApB,CADH;AAELF,IAAAA,UAAU,EAAES,KAAK,CAACG,IAAN,CAAWZ;AAFlB,GAAP;AAID,CALD;;AAOA,eAAeV,OAAO,CAACkB,eAAD,EAAkB;AACtCjB,EAAAA;AADsC,CAAlB,CAAP,CAEZM,SAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport PhotoCard from './PhotoCard';\nimport styled from 'styled-components';\n\nconst PhotoTiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 0 10px;\n  grid-auto-rows: 10px;\n`;\n\nclass PhotoList extends Component {\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  renderCreateButton = () => {\n    // If user is logged in, allow them to post new photo\n    if (this.props.isSignedIn) {\n      return (\n        <Link to='/photos/new' className='ui primary button'>\n          Post Photo\n        </Link>\n      );\n    }\n  };\n\n  renderPhotos = () => {\n    // Render all photos cards as HTML\n    return this.props.photos.map((photo) => {\n      return <PhotoCard key={photo.id} photo={photo} />;\n    });\n  };\n\n  render() {\n    return (\n      // <div className='content ui container'>\n      //   {this.renderCreateButton()}\n      <PhotoTiles>{this.renderPhotos()}</PhotoTiles>\n      // </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    photos: Object.values(state.photos),\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n})(PhotoList);\n"]},"metadata":{},"sourceType":"module"}