{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoDelete.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto, deletePhoto } from '../../actions';\n\nclass PhotoDelete extends Component {\n  componentDidMount() {\n    // Use the props that router automatically passes to rendered components (it contains the params from the routes, such as :id)\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchPhoto(id);\n  }\n\n  render() {\n    if (!this.props.photo) {\n      return 'Are you sure you want to delete this stream?';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"PhotoDelete\"));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // Router automatically passes these props to its rendered components\n  const {\n    id\n  } = ownProps.match.params;\n  return {\n    photo: state.photos[id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhoto,\n  deletePhoto\n})(PhotoDelete);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoDelete.js"],"names":["React","Component","connect","fetchPhoto","deletePhoto","PhotoDelete","componentDidMount","id","props","match","params","render","photo","mapStateToProps","state","ownProps","photos"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACA,SAAKF,KAAL,CAAWL,UAAX,CAAsBI,EAAtB;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKH,KAAL,CAAWI,KAAhB,EAAuB;AACrB,aAAO,8CAAP;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD;;AAjBiC;;AAoBpC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C;AACA,QAAM;AAAER,IAAAA;AAAF,MAASQ,QAAQ,CAACN,KAAT,CAAeC,MAA9B;AACA,SAAO;AACLE,IAAAA,KAAK,EAAEE,KAAK,CAACE,MAAN,CAAaT,EAAb;AADF,GAAP;AAGD,CAND;;AAQA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CACbC,WADa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto, deletePhoto } from '../../actions';\n\nclass PhotoDelete extends Component {\n  componentDidMount() {\n    // Use the props that router automatically passes to rendered components (it contains the params from the routes, such as :id)\n    const { id } = this.props.match.params;\n    this.props.fetchPhoto(id);\n  }\n\n  render() {\n    if (!this.props.photo) {\n      return 'Are you sure you want to delete this stream?';\n    }\n\n    return (\n      <div className='content ui container'>\n        <div>PhotoDelete</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // Router automatically passes these props to its rendered components\n  const { id } = ownProps.match.params;\n  return {\n    photo: state.photos[id],\n  };\n};\n\nexport default connect(mapStateToProps, { fetchPhoto, deletePhoto })(\n  PhotoDelete\n);\n"]},"metadata":{},"sourceType":"module"}