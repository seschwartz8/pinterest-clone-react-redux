{"ast":null,"code":"import * as type from '../actions/types';\nimport _ from 'lodash';\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null,\n  board: []\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case type.SIGN_IN:\n      return { ...state,\n        isSignedIn: true,\n        userId: action.payload\n      };\n\n    case type.SIGN_OUT:\n      return { ...state,\n        isSignedIn: false,\n        userId: null\n      };\n\n    case type.PIN_PHOTO:\n      return { ...state,\n        board: [action.payload, ...state.board]\n      };\n\n    case type.FETCH_BOARD:\n      return { ...state,\n        board: action.payload\n      };\n\n    case type.UNPIN_PHOTO:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/reducers/authReducer.js"],"names":["type","_","INITIAL_STATE","isSignedIn","userId","board","state","action","SIGN_IN","payload","SIGN_OUT","PIN_PHOTO","FETCH_BOARD","UNPIN_PHOTO","omit"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,kBAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,IADQ;AAEpBC,EAAAA,MAAM,EAAE,IAFY;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKA,IAAI,CAACQ,OAAV;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYH,QAAAA,UAAU,EAAE,IAAxB;AAA8BC,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAA7C,OAAP;;AACF,SAAKT,IAAI,CAACU,QAAV;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYH,QAAAA,UAAU,EAAE,KAAxB;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAAP;;AACF,SAAKJ,IAAI,CAACW,SAAV;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYD,QAAAA,KAAK,EAAE,CAACE,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACD,KAA1B;AAAnB,OAAP;;AACF,SAAKL,IAAI,CAACY,WAAV;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAA1B,OAAP;;AACF,SAAKT,IAAI,CAACa,WAAV;AACE,aAAOZ,CAAC,CAACa,IAAF,CAAOR,KAAP,EAAcC,MAAM,CAACE,OAArB,CAAP;;AACF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfD","sourcesContent":["import * as type from '../actions/types';\nimport _ from 'lodash';\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null,\n  board: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case type.SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case type.SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    case type.PIN_PHOTO:\n      return { ...state, board: [action.payload, ...state.board] };\n    case type.FETCH_BOARD:\n      return { ...state, board: action.payload };\n    case type.UNPIN_PHOTO:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}