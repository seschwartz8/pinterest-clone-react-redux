{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport PhotoCard from './PhotoCard';\nconst PhotoContainer = styled.div`\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 300px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1%;\n`;\nconst PinButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 80%;\n`;\nconst AdminControlsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n`;\n\nclass PhotoList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderAdminControls = photo => {\n      // Allow creator of photo to edit or delete photo\n      if (photo.userId === this.props.currentUserId) {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/photos/edit/${photo.id}`,\n          className: \"ui button primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n          to: `/photos/delete/${photo.id}`,\n          className: \"ui button negative\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }, \"Delete\"));\n      }\n    };\n\n    this.renderPinButton = photo => {\n      // Allow pinning a photo\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui button grey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }\n      }, \"Pin \", photo.title);\n    };\n\n    this.onHover = photoId => {\n      this.props.hoverPhoto(photoId);\n    };\n\n    this.onLeave = () => {\n      this.props.leavePhoto();\n    };\n\n    this.renderCreateButton = () => {\n      // If user is logged in, allow them to post new photo\n      if (this.props.isSignedIn) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: \"/photos/new\",\n          className: \"ui primary button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }\n        }, \"Post Photo\");\n      }\n    };\n\n    this.renderPhotos = () => {\n      // Render all photos as HTML\n      return this.props.photos.map(photo => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(PhotoContainer, {\n          style: {\n            backgroundImage: `url(${photo.url})`\n          },\n          key: photo.id,\n          onMouseEnter: () => this.onHover(photo.id),\n          onMouseLeave: () => this.onLeave(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(PinButtonContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }\n        }, this.props.isHoverPhoto === photo.id ? this.renderPinButton(photo) : null), /*#__PURE__*/React.createElement(AdminControlsContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, this.props.isHoverPhoto === photo.id && photo.userId === this.props.currentUserId ? this.renderAdminControls(photo) : null)));\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, this.renderCreateButton(), this.renderPhotos());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    photos: Object.values(state.photos),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n    isHoverPhoto: state.isHoverPhoto\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n  hoverPhoto,\n  leavePhoto\n})(PhotoList);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/pinterest-clone-react-redux/pinterest-clone-react-redux/client/src/components/photos/PhotoList.js"],"names":["React","Component","styled","connect","fetchPhotos","hoverPhoto","leavePhoto","Link","PhotoCard","PhotoContainer","div","PinButtonContainer","AdminControlsContainer","PhotoList","renderAdminControls","photo","userId","props","currentUserId","id","renderPinButton","title","onHover","photoId","onLeave","renderCreateButton","isSignedIn","renderPhotos","photos","map","backgroundImage","url","isHoverPhoto","componentDidMount","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, hoverPhoto, leavePhoto } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport PhotoCard from './PhotoCard';\n\nconst PhotoContainer = styled.div`\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 300px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1%;\n`;\n\nconst PinButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 80%;\n`;\n\nconst AdminControlsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n`;\n\nclass PhotoList extends Component {\n  componentDidMount() {\n    // Fetch photos on component mount\n    this.props.fetchPhotos();\n  }\n\n  renderAdminControls = (photo) => {\n    // Allow creator of photo to edit or delete photo\n    if (photo.userId === this.props.currentUserId) {\n      return (\n        <React.Fragment>\n          <Link to={`/photos/edit/${photo.id}`} className='ui button primary'>\n            Edit\n          </Link>\n          <Link\n            to={`/photos/delete/${photo.id}`}\n            className='ui button negative'\n          >\n            Delete\n          </Link>\n        </React.Fragment>\n      );\n    }\n  };\n\n  renderPinButton = (photo) => {\n    // Allow pinning a photo\n    return <button className='ui button grey'>Pin {photo.title}</button>;\n  };\n\n  onHover = (photoId) => {\n    this.props.hoverPhoto(photoId);\n  };\n\n  onLeave = () => {\n    this.props.leavePhoto();\n  };\n\n  renderCreateButton = () => {\n    // If user is logged in, allow them to post new photo\n    if (this.props.isSignedIn) {\n      return (\n        <Link to='/photos/new' className='ui primary button'>\n          Post Photo\n        </Link>\n      );\n    }\n  };\n\n  renderPhotos = () => {\n    // Render all photos as HTML\n    return this.props.photos.map((photo) => {\n      return (\n        <div>\n          <PhotoContainer\n            style={{ backgroundImage: `url(${photo.url})` }}\n            key={photo.id}\n            onMouseEnter={() => this.onHover(photo.id)}\n            onMouseLeave={() => this.onLeave()}\n          >\n            <PinButtonContainer>\n              {this.props.isHoverPhoto === photo.id\n                ? this.renderPinButton(photo)\n                : null}\n            </PinButtonContainer>\n            <AdminControlsContainer>\n              {this.props.isHoverPhoto === photo.id &&\n              photo.userId === this.props.currentUserId\n                ? this.renderAdminControls(photo)\n                : null}\n            </AdminControlsContainer>\n          </PhotoContainer>\n        </div>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className='content ui container'>\n        {this.renderCreateButton()}\n        {this.renderPhotos()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    photos: Object.values(state.photos),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n    isHoverPhoto: state.isHoverPhoto,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhotos,\n  hoverPhoto,\n  leavePhoto,\n})(PhotoList);\n"]},"metadata":{},"sourceType":"module"}